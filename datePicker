//코드5-18 데이트피커: 사용자에게 날짜를 보여주거나 선택할 수 있게 해주는 위젯

<DatePicker
	android:id="@+id/datePicker"
	android:layout_width="wrap_content"
	android:layout_height="wrap_content"
	
	//데이트피커의 모양을 달력 형태로 지정하는 속성(이 속성은 기본 값이므로 굳이 지정하지 않아도 지정한 것처럼 동작) 
	android:datePickerMode="calendar" />
	
	//설정에 대한 추가 설명
	 
	android:datePickerMode="spinner" 
	//데이터피커를 스피너 형태로 설정(스피너 형태: 위와 아래로 스크롤하면서 볼 수 있는 모양
	//-> 오른쪽에 달력 형태가 보임 but, 안드로이드 기기인 스마트폰은 너비가 좁기 때문에 달력 형태가 항꼐 있으면 불편하므로 calendarViewShown 속성을 false로 설정) 
	
	android:datePickerMode="false"
	
//데이트피커는 FrameLayout을 상속해서 만들어짐

//데이터피커가 사용자가 선택한 날짜를 텍스트뷰에 보여주는 코드
final TextView textView = findViewById(R.id.textView);
final DatePicker datePicker = findViewById(R.id.datePicker);

datePicker.init(2018, 06, 20, new DatePicker.OnDateChangedListener() {
	@Override
	public void onDateChanged(DatePicker view, int year, int monthOfYear, int dayOfMonth) {
		textView.setText(year + " " + monthOfYear + " " + dayOfMonth);
	}
});

/* 위의 코드에서 init()메소드 사용 but, 데이트피커는 실행되면 자동으로 현재 날짜를 보여주므로 굳이 init()메소드를 호출할 필요는 없음
이떄 년도, 월, 일을 지정해야 하며 원한다면 Calendar 클래스를 사용해서 현재 년도, 월, 일을 구할 수 있음
자바에서 제공하는 Calendar 클래스에 대해서는 따로 공부 */

//안드로이드 API 26이상부터 사용가능한 코드
final TextView textView = findViewById(R.id.textView);
final DatePicker datePicker = findViewById(R.id.datePicker);

datePicker.setOnDateChangedListener(new DatePicker.onDateChangedListener() {
	@Override
	public void onDateChanged(DatePicker view, int year, int monthOfYear, int dayOfMonth) {
		textView.setText(year + " " + (monthOfYear + 1) + " " + dayOfMonth);
	}
});


//DatePickerDialog 클래스를 사용해서 데이트피커를 다이얼로그 형태로 사용할 수 있는 방법
private DatePickerDialog.OnDateSetListener dateSetListener = new DatePickerDialog.OnDateSetListener() {
	@Override
	public void onDateSet(DatePicker view, int year, int monthOfYear, int dayOfMonth) {
		String date = year + "-" + (monthOfYear+1) + "-" + dayOfMonth;
		textView.setText(date);
	}
};
