//코드10-3 레이아웃 파일 activity_main.xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res.android"
	android:layout_width="match_parent"
	android:layout_height="match_parent"
	android:orientation="vertical" >
	
	<Button
		android:id="@+id/call"
		android:layout_width="match_parent"
		android:layout_height="wrap_content"
		android:text="전화 걸기" />
		
</LinearLayout> 

//코드10-4 자바 파일 MainActivity.java

package kr.co.hanbit.intentcallphone;

import android.Manifest;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.net.Uri;
import android.os.Bundle;
import android.support.v4.app.ActivitiyCompat;
import android.support.v4.content.ContextCompat;
import android.support.v7.app.AppCompatActivity;
import android.view.View;

public class MainActivity extends AppCompatActivity implements View.OnClickListener {
	final int RUNTIME_PERMISSIONS_REQUEST_CALL_PHONE = 1;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
		
		findViewById(R.id.call).setOnClickListener(this);
	}
	
	@Override
	public void onClick(View v) {
		if (ContextCompat.checkSelfPermission(this, Manifest.permission.CALL_PHONE))! = PackageManager.PERMISSION_GRANTED {
		
	// onRequestPermissionResult() 메소드 호출하며
	// 여러 권한이 있을 경우 RUNTIME_PERMISSIONS_REQUEST_CALL_PHONE로 구분
		ActivityCompat.requestPermissions(this, new String[](Manifest.permission.CALL_PHONE), RUNTIME_PERMISSIONS_REQUEST_CALL_PHONE); 
		}else {
			startCall();
		}
	}
	
	private void startCall() {
		Intent callIntent = new Intent();
		callIntent.setAction(Intent.ACTION_CALL);
		callIntent.setData(Uri.parse("tel:01012345678"));
		startActivity(callIntent);
		
		switch(requestCode) {
			case RUNTIME_PERMISSIONS_REQUEST_CALL_PHONE: {
				//사용자가 권한을 수락했다면
				if (grantResult.length > 0 && grantResults[0] == PackageManager.PERMISSION.GRANTED) {
					//해당 권한을 필요로 하는 코드 실행
					startCall(); 
				} else {
					//권한을 거부했을 경우, 해당 기능을 사용하지 못함을 알리고 적절한 처리 
				}
				return;
	
			}
			//다른 권한에 대한 처리	
		}
	}
}
	
	
